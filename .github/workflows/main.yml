# This workflow builds a pdf, and when a tag is pushed then the pdf is released to GitHub releases
name: Release pdf on tag

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '**'

env:
  FILE: main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@v1
      - name: Compile Main
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: xu-cheng/latex-action@master
        with:
          root_file: main.tex
          working_directory: src/
          compiler: #optional
          args:  #optional
      - name: Upload pdf
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: main.zip
          path: src/*.pdf
      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Prepare output path and output name
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: prepare_metadata
        # upload-release-asset does not support wildcards or environment variables at the moment
        run: |
          echo ::set-output name=ARTIFACT_PATH::./src/$FILE.pdf
          echo ::set-output name=ARTIFACT_NAME::$FILE.pdf
      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_metadata.outputs.ARTIFACT_PATH }}
          asset_name: ${{ steps.prepare_metadata.outputs.ARTIFACT_NAME }}
          asset_content_type: application/pdf

